apply plugin: 'com.android.library'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.revenuecat.purchases:purchases-hybrid-common:17.12.0'
    implementation 'com.revenuecat.purchases:purchases-hybrid-common-ui:17.12.0'
    implementation 'androidx.activity:activity:1.8.2'
}

android {
    namespace 'com.revenuecat.purchasesunity.ui'
    
    compileSdk getProperty("unity.compileSdkVersion") as int
    buildToolsVersion = getProperty("unity.buildToolsVersion")

    compileOptions {
        sourceCompatibility JavaVersion.valueOf(getProperty("unity.javaCompatabilityVersion"))
        targetCompatibility JavaVersion.valueOf(getProperty("unity.javaCompatabilityVersion"))
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }

    def unityLib = project(':unityLibrary').extensions.getByName('android')

    defaultConfig {
        consumerProguardFiles "consumer-proguard.pro"
        minSdkVersion unityLib.defaultConfig.minSdkVersion.mApiLevel
        targetSdkVersion unityLib.defaultConfig.targetSdkVersion.mApiLevel
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules. pro'
        }
    }
}